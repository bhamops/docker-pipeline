name: Full Deploy

on:
  push:
    branches: ["main", "stg"]

  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.make-tag.outputs.tag }}
    steps:

    - uses: actions/checkout@v3
    - id: make-tag
      name: Generate version
      run: echo "tag=$(TZ=':America/Chicago' date +'%Y-%m-%dT%H-%M-%S')" >> "$GITHUB_OUTPUT"

    - name: Build the Docker image
      run: |
        mkdir .artifacts
        docker build . --file Dockerfile --tag image:latest
        docker save image:latest > .artifacts/image.tgz

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: .artifacts
        retention-days: 1

  staging-publish:
    environment: staging
    runs-on: ubuntu-latest
    needs: build
    env:
      DOCKER_IMAGE: ${{ vars.DOCKER_URL }}/${{ vars.DOCKER_REPO }}
      TAG: ${{ needs.build.outputs.tag }}
    steps:
    - uses: actions/checkout@v3

    - name: Retrieve saved Docker image
      uses: actions/download-artifact@v3
      with:
        name: docker-image
        path: .artifacts

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: ${{ vars.DOCKER_URL  }}
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Load the Docker image
      run: docker load < .artifacts/image.tgz

    - name: Load the Docker image
      run: docker tag image:latest ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}

    - name: Publish Docker Image
      run: docker push ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}

  production-publish:
    environment: production
    runs-on: ubuntu-latest
    needs: ["build", "staging"]
    env:
      DOCKER_IMAGE: ${{ vars.DOCKER_URL }}/${{ vars.DOCKER_REPO }}
      TAG: ${{ needs.build.outputs.tag }}
    steps:
    - uses: actions/checkout@v3

    - name: Retrieve saved Docker image
      uses: actions/download-artifact@v3
      with:
        name: docker-image
        path: .artifacts

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: ${{ vars.DOCKER_URL  }}
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Load the Docker image
      run: docker load < .artifacts/image.tgz

    - name: Load the Docker image
      run: docker tag image:latest ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}

    - name: Publish Docker Image
      run: docker push ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}
