name: Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy-staging:
    environment: staging
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: ${{ vars.DOCKER_URL  }}
        username: _json_key_base64
        password: ${{ secrets.GCP_SA_KEY }}
    - id: version
      name: Generate Version
      run: echo "version=$(TZ=':America/Chicago' date +'Y-%m-%dT%H-%M-%S')" >> "$GITHUB_OUTPUT"
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ vars.DOCKER_URL }}/${{ vars.DOCKER_REPO }}:${{ steps.version.outputs.version}}
    - name: Publish Docker Image
      run: docker push ${{ vars.DOCKER_URL }}/${{ vars.DOCKER_REPO }}:${{ steps.version.outputs.version}}

  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: ${{ vars.DOCKER_URL  }}
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}
    - id: version
      name: Generate Version
      run: echo "version=$(TZ=':America/Chicago' date +'Y-%m-%dT%H-%M-%S')" >> "$GITHUB_OUTPUT"
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ vars.DOCKER_URL }}/${{ vars.DOCKER_REPO }}:${{ steps.version.outputs.version}}
    - name: Publish Docker Image
      run: docker push ${{ vars.DOCKER_URL }}/${{ vars.DOCKER_REPO }}:${{ steps.version.outputs.version}}
